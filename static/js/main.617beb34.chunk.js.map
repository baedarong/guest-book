{"version":3,"sources":["components/AuthForm.js","fbase.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["AuthForm","auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","includes","className","type","placeholder","required","style","onClick","prev","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","authService","dbService","firestore","storageService","getStorage","Auth","onSocialClick","provider","GoogleAuthProvider","addScope","GithubAuthProvider","signInWithPopup","icon","faEnvelopeOpenText","color","size","marginBottom","faGoogle","faGithub","fontSize","paddingTop","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","deleteObject","ref","attachmentURL","toggleEditing","onUpdateClick","nweetRef","updateDoc","createdAt","Date","now","autoFocus","key","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileRef","uid","uuidv4","uploadString","response","getDownloadURL","creatorId","collection","add","paddingBottom","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshop","sortedArray","docs","map","data","sort","first","second","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweet","query","where","getDocs","forEach","console","log","updateProfile","push","signOut","location","reload","Navigation","display","justifyContent","to","marginLeft","flexDirection","alignItems","faHome","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","currentUser","class","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAsEeA,EAnEE,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACf,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAW,SAACC,GACd,MAAgCA,EAAzBC,OAASC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,MACV,UAATD,EAAkBV,EAASW,GACb,aAATD,GAAqBR,EAAYS,IAGvCC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBADS,UAGVX,EAHU,gCAILY,YAA+BlB,EAAME,EAAOE,GAJvC,6CAMLe,YAA2BnB,EAAME,EAAOE,GANnC,yDAUV,KAAMgB,QAAQC,SAAS,wBAAyBZ,EAAS,2JACnD,KAAMW,QAAQC,SAAS,4CAA6CZ,EAAS,+KACjFA,EAAS,KAAMW,SAZP,0DAAH,sDAoBd,OACI,oCACA,0BAAML,SAAUA,EAAUO,UAAU,aAChC,2BACIA,UAAU,YACVT,KAAK,QACLU,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRX,MAAOZ,EACPQ,SAAUA,EACVgB,MAAO,CAAC,UAAY,YACxB,2BACIJ,UAAU,YACVT,KAAK,WACLU,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRX,MAAOV,EACPM,SAAUA,EACVgB,MAAO,CAAC,UAAY,YACxB,2BACEH,KAAK,SACLD,UAAU,uBACVR,MAAOR,EAAa,2BAAS,uBAE9BE,GAAS,0BAAMc,UAAU,aAAad,IAEvC,0BAAMmB,QAhCQ,WACpBpB,GAAc,SAACqB,GAAD,OAAYA,MA+BUN,UAAU,cACrChB,EAAa,0DAAe,uD,0CC1C3CuB,IAASC,cATc,CACrBC,OAAQC,0CACRC,WAAYD,mCACZE,UAAWF,mBACXG,cAAeH,+BACfI,kBAAmBJ,gBACnBK,MAAOL,+CAMuBH,IAAzB,IACM7B,EAAOsC,cACPC,EAAcV,IAAS7B,OACvBwC,EAAYX,IAASY,YACrBC,EAAiBC,c,QCsBfC,EA3CF,WACT,IAAM5C,EAAOsC,cAEPO,EAAa,uCAAI,WAAOlC,GAAP,iBAAAK,EAAA,4DAGT,YAFKH,EAAUF,EAAnBC,OAASC,QAGfiC,EAAW,IAAIC,KACNC,SAAS,WAClBF,EAASE,SAAS,UAEF,WAATnC,IACPiC,EAAW,IAAIG,KACND,SAAS,QAVC,SAYfT,EAAYW,gBAAgBJ,GAZb,2CAAJ,sDAenB,OACE,yBAAKxB,UAAU,iBACf,kBAAC,IAAD,CACE6B,KAAMC,IACNC,MAAO,UACPC,KAAK,KACL5B,MAAO,CAAE6B,aAAc,MAEzB,0BAAM7B,MAAO,CAAC,cAAiB,KAA/B,8EACA,0BAAMA,MAAO,CAAC,cAAiB,KAA/B,0BACE,kBAAC,EAAD,CAAU1B,KAAMA,IAChB,6BACC,yBAAKsB,UAAU,YACd,4BAAQK,QAASkB,EAAehC,KAAK,SAASS,UAAU,WAAxD,yCACa,kBAAC,IAAD,CAAiB6B,KAAMK,OACpC,4BAAQ7B,QAASkB,EAAehC,KAAK,SAASS,UAAU,WAAxD,yCACa,kBAAC,IAAD,CAAiB6B,KAAMM,SAGtC,0BAAM/B,MAAO,CAAC2B,MAAM,WAAYK,SAAS,GAAIC,WAAW,KAAxD,oJACA,0BAAMjC,MAAO,CAAC2B,MAAM,WAAYK,SAAS,GAAIC,WAAW,KAAxD,4G,wBC+BOC,EAtED,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QACtB,EAA8B7D,oBAAS,GAAvC,mBAAO8D,EAAP,KAAgBC,EAAhB,KACA,EAAgC/D,mBAAS4D,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAGMC,EAAa,uCAAG,sBAAApD,EAAA,0DACIqD,OAAOC,QAAQ,mEADnB,gCAGRC,YAAUC,YAAIhC,EAAW,SAAUqB,EAASY,KAHpC,uBAIRC,YAAaC,YAAIjC,EAAgBmB,EAASe,gBAJlC,2CAAH,qDASbC,EAAgB,WAClBb,GAAW,SAACpC,GAAD,OAAWA,MAQpBkD,EAAa,uCAAG,WAAMnE,GAAN,eAAAK,EAAA,6DAClBL,EAAMM,iBACN4D,IAEME,EAAWP,YAAIhC,EAAW,SAAUqB,EAASY,IAJjC,SAKZO,YAAUD,EAAU,CACtBd,KAAMC,EACNe,UAAWC,KAAKC,QAPF,2CAAH,sDAWnB,OACI,yBAAK7D,UAAU,SACTyC,EACF,0BAAMzC,UAAU,sBAAsBP,SAAU+D,GAC5C,2BACAxD,UAAU,YACVC,KAAK,OACLC,YAAY,wCACZV,MAAOoD,EACPzC,UAAQ,EACR2D,WAAS,EACT1E,SA3BK,SAACC,GACd,IAAeG,EAAUH,EAAlBC,OAAQE,MACfqD,EAAYrD,IA0BJY,MAAO,CAAC,UAAY,YAEpB,2BAAOJ,UAAU,UAAUC,KAAK,SAAST,MAAM,6BAC/C,0BAAMa,QAASkD,EAAevD,UAAU,qBAAxC,6BAIF,wBAAI+D,IAAKxB,EAASY,IAAlB,IAAwBZ,EAASI,KAAjC,KAEDJ,EAASe,eAAiB,yBAAKU,IAAKzB,EAASe,cAAeW,IAAI,kBAChEzB,GACD,yBAAKxC,UAAU,kBACZ,0BAAMK,QAASyC,GACd,kBAAC,IAAD,CAAiBjB,KAAMqC,OAEzB,0BAAM7D,QAASkD,GACb,kBAAC,IAAD,CAAiB1B,KAAMsC,U,QC2CxBC,EAzGM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEnB,EAA0B1F,qBAA1B,mBAAO2F,EAAP,KAAcC,EAAd,KACA,EAAoC5F,mBAAS,IAA7C,mBAAO6F,EAAP,KAAmBC,EAAnB,KAQMhF,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACbL,EAAMM,iBACQ,KAAV2E,EAFS,oDAKThB,EAAgB,GACF,KAAfkB,EANU,wBAOHE,EAAUrB,YAAIjC,EAAD,UAAoBiD,EAAQM,IAA5B,YAAmCC,gBAP7C,SAQcC,YAAaH,EAASF,EAAY,YARhD,cAQHM,EARG,iBAYaC,YAAeD,EAASzB,KAZrC,QAYTC,EAZS,sBAcPf,EAAW,CACbI,KAAK2B,EACLX,UAAWC,KAAKC,MAChBmB,UAAWX,EAAQM,IACnBrB,iBAlBS,UAoBPpC,EAAU+D,WAAW,UAAUC,IAAI3C,GApB5B,QAqBbgC,EAAS,IACTE,EAAc,IAtBD,4CAAH,sDA0Cd,OACI,0BAAMhF,SAAUA,EAAUO,UAAU,eAChC,0BAAMI,MAAO,CAAE2B,MAAM,QAASK,SAAU,GAAI+C,cAAc,KAAM,mCAChE,0BAAM/E,MAAO,CAAE2B,MAAM,QAASK,SAAU,GAAI+C,cAAc,KAAM,gFAChE,0BAAM/E,MAAO,CAAE2B,MAAM,QAASK,SAAU,GAAI+C,cAAc,KAAM,2FAChE,0BAAM/E,MAAO,CAAE2B,MAAM,WAAYK,SAAU,GAAI+C,cAAc,IAA7D,wJACA,0BAAM/E,MAAO,CAAE2B,MAAM,WAAYK,SAAU,GAAI+C,cAAc,KAA7D,yJACA,yBAAKnF,UAAU,2BACX,2BACAA,UAAU,sBACVR,MAAO8E,EACPlF,SA3DK,SAACC,GACd,IAAeG,EAAUH,EAAlBC,OAAQE,MACf+E,EAAS/E,IA0DDS,KAAK,OACLC,YAAY,+BACZkF,UAAW,IACXhF,MAAO,CAAC,UAAY,YAEpB,2BAAOH,KAAK,SAAST,MAAM,SAASQ,UAAU,yBAGlD,2BAAOqF,QAAQ,cAAcrF,UAAU,uBACvC,iEACI,kBAAC,IAAD,CAAiB6B,KAAMyD,OAE3B,2BACAnC,GAAG,cACHlD,KAAK,OACLsF,OAAO,UACPnG,SA7Ca,SAACC,GAClB,IAGMmG,EADFnG,EADFC,OAAUmG,MAEU,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAClB,IACmBC,EACfD,EADFE,cAAiBD,OAEnBrB,EAAcqB,IAEhBJ,EAAOM,cAAcR,IAkCjBpF,MAAO,CACP6F,QAAS,KAGRzB,GACD,yBAAKxE,UAAU,2BACf,yBACAiE,IAAI,aACJD,IAAKQ,EACLpE,MAAO,CACP8F,gBAAiB1B,KAGjB,yBAAKxE,UAAU,qBAAqBK,QA5ClB,kBAAMoE,EAAc,MA6ClC,wCACA,kBAAC,IAAD,CAAiB5C,KAAMsE,UCnExBC,EAhCF,SAAC,GAAe,IAAd/B,EAAa,EAAbA,QACX,EAA4B1F,mBAAS,IAArC,mBAAO0H,EAAP,KAAeC,EAAf,KAgBA,OAdAC,qBAAU,WAENrF,EAAU+D,WAAW,UAAUuB,YAAW,SAACC,GACvC,IAKEC,EALiBD,EAASE,KAAKC,KAAI,SAAC1D,GAAD,oBACjCC,GAAGD,EAAIC,IACJD,EAAI2D,WAGgBC,MAAK,SAACC,EAAOC,GAAR,OAAoBA,EAAOrD,UAAYoD,EAAMpD,aACjF2C,EAAUI,QAEX,IAIC,yBAAK1G,UAAU,aACX,kBAAC,EAAD,CAAcqE,QAASA,IACvB,yBAAKjE,MAAO,CAAE6G,UAAW,KACpBZ,EAAOO,KAAI,SAAAtC,GAAK,OACb,kBAAC,EAAD,CACAP,IAAKO,EAAMnB,GACXZ,SAAU+B,EACV9B,QAAS8B,EAAMU,YAAcX,EAAQM,Y,QC0CxCuC,EAlED,SAAC,GAA4B,IAA3B7C,EAA0B,EAA1BA,QAAS8C,EAAiB,EAAjBA,YACjBC,EAAUC,cAChB,EAA4C1I,mBAAS0F,EAAQiD,YAAcjD,EAAQiD,YAAc,IAAjG,mBAAOC,EAAP,KAAuBC,EAAvB,KAQMC,EAAU,uCAAG,4BAAA/H,EAAA,6DAEX2G,EAASqB,aACbzC,YAAW/D,EAAW,UACtByG,aAAM,YAAa,KAAMtD,EAAQM,MAJlB,SAMYiD,YAAQvB,GANpB,cAOHwB,SAAQ,SAAC3E,GACrB4E,QAAQC,IAAI7E,EAAIC,GAAI,OAAQD,EAAI2D,WARjB,2CAAH,qDAiBVpH,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBACH0E,EAAQiD,cAAgBC,EAFZ,gCAGPS,YAAc3D,EAAS,CAAEiD,YAAaC,IAH/B,OAIbJ,IAJa,OAMfC,EAAQa,KAAK,KANE,2CAAH,sDAad,OAJA1B,qBAAU,WACRkB,OAIA,yBAAKzH,UAAU,aACT,2BACAC,KAAK,OACL6D,WAAS,EACT5D,YAAY,qCACZd,SAxBS,SAACC,GAChB,IAAgBG,EAAYH,EAArBC,OAASE,MAChBgI,EAAkBhI,IAuBZA,MAAO+H,EACPnH,MAAO,CAAC,UAAY,YAEpB,2BACAH,KAAK,SACLI,QAASZ,EACTD,MAAM,kCACNQ,UAAU,UACVI,MAAO,CACL6G,UAAW,MAGf,0BAAMjH,UAAU,2BAA2BK,QAxD3B,WACpBY,EAAYiH,UACZf,IACAC,EAAQa,KAAK,KACblF,OAAOoF,SAASC,WAoDZ,8BCxBKC,EApCI,SAAC,GAAD,IAAEhE,EAAF,EAAEA,QAAF,OACjB,6BACG,wBAAIjE,MAAO,CAAEkI,QAAS,OAAQC,eAAgB,SAAUtB,UAAW,KAClE,kBAAC,IAAD,CAAMuB,GAAG,IACPpI,MAAO,CACLqI,WAAY,GACZH,QAAS,OACTI,cAAe,SACfC,WAAY,SACZvG,SAAU,KAEZ,kBAAC,IAAD,CAAiBP,KAAM+G,IAAQ7G,MAAO,UAAWC,KAAK,OACtD,0BAAM5B,MAAO,CAAE6G,UAAW,KACvB,SAGL,kBAAC,IAAD,CACIuB,GAAG,WACHpI,MAAO,CACLqI,WAAY,GACZH,QAAS,OACTI,cAAe,SACfC,WAAY,SACZvG,SAAU,KAGZ,kBAAC,IAAD,CAAiBP,KAAMgH,IAAQ9G,MAAO,UAAWC,KAAK,OACtD,0BAAM5B,MAAO,CAAE6G,UAAW,KACvB5C,EAAQiD,YAAR,UACIjD,EAAQiD,YADZ,kBAEC,eCFCwB,EA1BG,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,WAAY1E,EAA2B,EAA3BA,QAAS8C,EAAkB,EAAlBA,YACpC,OACG,kBAAC,IAAD,KACK4B,GAAc,kBAAC,EAAD,CAAY1E,QAASA,IACpC,kBAAC,IAAD,KACK0E,EACD,yBACA3I,MAAO,CACL4I,SAAU,IACVC,MAAO,OACPC,OAAQ,SACRjC,UAAW,GACXqB,QAAS,OACTC,eAAgB,WAGlB,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,KAAI,kBAAC,EAAD,CAAM/E,QAASA,KACrC,kBAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,YAAW,kBAAC,EAAD,CAAS/E,QAASA,EAAS8C,YAAaA,MAGrE,kBAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,KAAI,kBAAC,EAAD,UCMvBC,MA5Bf,WACE,MAAwB1K,oBAAS,GAAjC,mBAAO2K,EAAP,KAAaC,EAAb,KACA,EAA8B5K,mBAAS,MAAvC,mBAAO0F,EAAP,KAAgBmF,EAAhB,KAcA,OAbAjD,qBAAU,WAGRkD,YAAmB/K,GAAM,SAACgL,GACrBA,GAAMF,EAAWE,GACpBH,GAAQ,QAET,IAOD,oCACCD,EACD,kBAAC,EAAD,CACAP,WAAYY,QAAQtF,GACpBA,QAASA,EACT8C,YAVkB,WAClBqC,EAAWvI,EAAY2I,gBASO,yBAAKC,MAAM,iBAAX,8B,MCtBlCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAGFC,SAASC,eAAe,W","file":"static/js/main.617beb34.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\n\nconst AuthForm = ({auth}) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if(name === \"email\") setEmail(value);\n        else if(name === \"password\") setPassword(value);\n    }\n\n    const onSubmit = async (event) => {\n      event.preventDefault();\n      try {\n        if(newAccount) {\n          await createUserWithEmailAndPassword(auth, email, password);\n        } else {\n          await signInWithEmailAndPassword(auth, email, password);\n        }\n      } catch(error) {\n        //Firebase: Error (auth/email-already-in-use).\n        if(error.message.includes('email-already-in-use')) setError(\"해당 계정으로 가입한 이력이 존재합니다! 로그인 해주세요\") \n        else if (error.message.includes('account-exists-with-different-credential')) setError(\"다른 방식으로 가입된 계정입니다. 해당 방식으로 로그인 해주세요!\")\n        else setError(error.message)\n      }\n    }\n\n    const toggleAccount = () => {\n      setNewAccount((prev)  => !prev) // setNewAccount(!newAccount); \n    }\n\n    return (\n        <>\n        <form onSubmit={onSubmit} className=\"container\">\n            <input\n                className=\"authInput\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                required\n                value={email}\n                onChange={onChange} \n                style={{\"textAlign\":\"center\"}}/>\n            <input\n                className=\"authInput\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                required\n                value={password}\n                onChange={onChange} \n                style={{\"textAlign\":\"center\"}}/>\n            <input\n              type=\"submit\"\n              className=\"authInput authSubmit\"\n              value={newAccount ? \"가입하기\" : \"로그인\"}\n            />\n            {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n              {newAccount ? \"계정으로 로그인하기\" : \"이메일로 가입하기\"}\n            </span>\n      </>\n    )\n}\n\nexport default AuthForm;","// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/database\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\nimport { getAuth } from \"firebase/auth\";\nimport { getStorage } from \"firebase/storage\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n// Initialize Firebase\n\nexport const firebaseInstance = firebase;\nexport const auth = getAuth();\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = getStorage();\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGoogle, faGithub,} from \"@fortawesome/free-brands-svg-icons\";\nimport { getAuth, GoogleAuthProvider, GithubAuthProvider } from 'firebase/auth';\nimport AuthForm from \"components/AuthForm\";\nimport { authService } from \"fbase\";\nimport { faEnvelopeOpenText } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Auth = () => {\n    const auth = getAuth();  \n\n    const onSocialClick =  async (event) => {\n      const { target: {name} } = event; // event가 발생하는 곳의 target Name;\n      let provider;\n      if(name === 'google') {\n        provider = new GoogleAuthProvider();\n        provider.addScope('profile');\n        provider.addScope('email');\n      }\n      else if (name === 'github') {\n        provider = new GithubAuthProvider();\n        provider.addScope('repo');\n      }\n      await authService.signInWithPopup(provider);\n    }\n    \n    return (\n      <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faEnvelopeOpenText}\n        color={\"#FEBD00\"}\n        size=\"3x\"\n        style={{ marginBottom: 25 }}\n      />\n      <span style={{\"paddingBottom\": 10}}> 다롱네 방명록 (｡•̀ᴗ-)✧\" </span>\n      <span style={{\"paddingBottom\": 30}}> Instagram @darongbae </span>\n        <AuthForm auth={auth}/>\n        <div>\n         <div className=\"authBtns\">\n          <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Google로 시작하기 <FontAwesomeIcon icon={faGoogle} /></button>     \n          <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Github로 시작하기 <FontAwesomeIcon icon={faGithub} /></button>\n        </div>\n        </div>\n        <span style={{color:\"darkgray\", fontSize:11, paddingTop:10}}> * 가입 절차는 게시글의 수정 및 삭제 권한을 위함입니다. </span>\n        <span style={{color:\"darkgray\", fontSize:11, paddingTop:10}}> 이외의 개인정보는 수집되지 않습니다. </span>\n      </div>\n    );\n  };\n\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport { doc, deleteDoc, updateDoc  } from \"firebase/firestore\";\nimport React, { useState } from \"react\";\nimport { deleteObject, ref } from \"@firebase/storage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({nweetObj, isOwner}) => { \n    const [editing, setEditing] = useState(false); // True And False\n    const [newNweet, setNewNweet] = useState(nweetObj.text); // Update Text of Edit Input \n\n    // DELETE \n    const onDeleteClick = async() => {\n        const deleteClicked = window.confirm(\"진짜 삭제하시게요? 😱\");\n        if(deleteClicked) {\n            await deleteDoc(doc(dbService, \"nweets\", nweetObj.id));\n            await deleteObject(ref(storageService, nweetObj.attachmentURL));\n        }\n    }\n \n    // UPDATE\n    const toggleEditing = () => {\n        setEditing((prev) => !prev);\n    }\n\n    const onChange = (event) => {\n        const {target:{value}} = event;\n        setNewNweet(value);\n    }\n\n    const onUpdateClick = async(event) => {\n        event.preventDefault();\n        toggleEditing();\n\n        const nweetRef = doc(dbService, \"nweets\", nweetObj.id);\n        await updateDoc(nweetRef, {\n            text: newNweet,\n            createdAt: Date.now()\n        });\n    }\n\n    return (\n        <div className=\"nweet\">\n            { editing ? \n            <form className=\"container nweetEdit\" onSubmit={onUpdateClick}>\n                <input \n                className=\"formInput\"\n                type=\"text\"\n                placeholder=\"문구 수정하기\"\n                value={newNweet} \n                required \n                autoFocus\n                onChange={onChange}\n                style={{\"textAlign\":\"center\"}}>\n                </input>\n                <input className=\"formBtn\" type=\"submit\" value=\"수정하기\"></input> \n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                    취소하기\n                </span>\n            </form>\n            : <h4 key={nweetObj.id}> {nweetObj.text} </h4>  \n            }\n            {nweetObj.attachmentURL && <img src={nweetObj.attachmentURL} alt=\"attachmentURL\"/> }\n            {isOwner && \n            <div className=\"nweet__actions\">\n               <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default Nweet; ","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { ref, uploadString, getDownloadURL } from \"@firebase/storage\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({userObj}) => {\n\n    const [nweet, setNweet] = useState();\n    const [attachment, setAttachment] = useState(\"\");\n    \n    const onChange = (event) => {\n        const {target:{value}} = event; \n        setNweet(value);\n    }\n\n    // return Promise, so set Async & Await\n    const onSubmit = async (event) => { \n        event.preventDefault();\n        if (nweet === \"\") {\n            return;\n        }\n        let attachmentURL = \"\";\n        if(attachment !== \"\") {\n            const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`); // 1. 파일에 대한 reference 갖기\n            const response = await uploadString(fileRef, attachment, \"data_url\"); // 2. 해당 ref로 bucket에 저장하기\n            \n            // [return] promise | promise : 기다려달라, await: 기다리겠다 -> 값을 받을 때까지 기다림 \n            // https://firebase.google.com/docs/reference/js/storage#getdownloadurl\n            attachmentURL = await getDownloadURL(response.ref); // 3. 해당 ref의 URL 받기 (collection에 주소 저장) \n        }\n        const nweetObj = {\n            text:nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentURL,\n        }\n        await dbService.collection(\"nweets\").add(nweetObj); // 4. collection에 저장.\n        setNweet(\"\");\n        setAttachment(\"\");\n    }\n    \n    const onFileChange = (event) => {\n        const {\n          target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n          const {\n            currentTarget: { result },\n          } = finishedEvent;\n          setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n      };\n\n    const onClearAttachment = () => setAttachment(\"\");\n\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\"> \n            <span style={{ color:\"white\", fontSize: 20, paddingBottom:10}}>{\"안녕하세요?\"}</span>\n            <span style={{ color:\"white\", fontSize: 20, paddingBottom:10}}>{\"방문 이력을 남겨주세요! 😍\"}</span>\n            <span style={{ color:\"white\", fontSize: 18, paddingBottom:10}}>{\"모든 내용은 익명으로 전달됩니다\"}</span>\n            <span style={{ color:\"darkgray\", fontSize: 11, paddingBottom:5}}>*부적절한 내용은 관리자에 의해 삭제 조치될 수 있습니다. </span>\n            <span style={{ color:\"darkgray\", fontSize: 11, paddingBottom:20}}>*배다롱이 제작에 참여한 HeyNana 어플도 많이 이용 부탁드려요! </span>\n            <div className=\"factoryInput__container\">\n                <input\n                className=\"factoryInput__input\"\n                value={nweet}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"문구 입력...\"\n                maxLength={120}\n                style={{\"textAlign\":\"center\"}}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n           \n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">        \n            <span>사진 업로드</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n            id=\"attach-file\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={onFileChange}\n            style={{\n            opacity: 0,\n            }}\n            />\n            {attachment &&  (\n            <div className=\"factoryForm__attachment\">\n            <img\n            alt=\"attachment\"\n            src={attachment}\n            style={{\n            backgroundImage: attachment,\n            }}\n            />\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                <span>Remove</span>\n                <FontAwesomeIcon icon={faTimes} />\n            </div>\n            </div>\n            )}\n        </form>\n    )\n}\n\nexport default NweetFactory;","import { dbService } from \"fbase\";\nimport React, { useState, useEffect } from \"react\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({userObj}) => {\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() => { \n        // DB 실시간 감지 -> onSnapShot\n        dbService.collection(\"nweets\").onSnapshot((snapshop)=> {\n            const nweetArray = snapshop.docs.map((doc) => ({\n                id:doc.id, \n                ...doc.data()\n            }))\n            \n        const sortedArray = nweetArray.sort((first, second) =>  second.createdAt - first.createdAt  )  \n        setNweets(sortedArray)\n        })\n    }, []);\n\n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj}></NweetFactory>\n            <div style={{ marginTop: 30 }}>\n                {nweets.map(nweet =>\n                    <Nweet \n                    key={nweet.id} \n                    nweetObj={nweet}\n                    isOwner={nweet.creatorId === userObj.uid} \n                    />\n                )}\n            </div>\n        </div>\n    )\n};\nexport default Home;","import React, {useEffect, useState} from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { collection, getDocs, query, where } from \"@firebase/firestore\";\nimport { updateProfile } from \"firebase/auth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({userObj, refreshUser}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName ? userObj.displayName : \"\");\n    const onLogOutClick = () => {\n      authService.signOut();\n      refreshUser();\n      history.push(\"/\");\n      window.location.reload()\n    };\n\n    const getMyNweet = async() => {\n       // DB 필터링\n      const nweets = query(\n        collection(dbService, \"nweets\"),\n        where(\"creatorId\", \"==\", userObj.uid)\n        );\n      const querySnapshot =  await getDocs(nweets);\n      querySnapshot.forEach((doc) => {\n        console.log(doc.id, \" => \", doc.data());\n      });\n    }\n    \n    const onChange = (event) => {\n      const {target: {value},}  = event;\n      setNewDisplayName(value);\n    }\n    \n    const onSubmit = async (event) => {\n      event.preventDefault();\n      if(userObj.displayName !== newDisplayName) {\n        await updateProfile(userObj, { displayName: newDisplayName });\n        refreshUser();\n      }\n      history.push(\"/\");\n    }\n\n    useEffect(() => {\n      getMyNweet();\n    })\n\n    return (\n      <div className=\"container\">\n            <input \n            type=\"text\" \n            autoFocus \n            placeholder=\"닉네임 입력...\" \n            onChange={onChange} \n            value={newDisplayName}\n            style={{\"textAlign\":\"center\"}}\n            />\n            <input\n            type=\"submit\"\n            onClick={onSubmit}\n            value=\"닉네임 변경\"\n            className=\"formBtn\"\n            style={{\n              marginTop: 10,\n            }}\n          />\n          <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n            로그아웃\n          </span>\n      </div>\n    );\n  };\n  \n  export default Profile;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser, faHome } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({userObj}) => (\n  <nav>\n     <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <Link to=\"/\" \n        style={{\n          marginLeft: 10,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          fontSize: 12,\n        }}>\n        <FontAwesomeIcon icon={faHome} color={\"#FEBD00\"} size=\"2x\" />\n        <span style={{ marginTop: 10 }}>\n          {\"Home\"}\n        </span>          \n      </Link>\n      <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#FEBD00\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n            ? `${userObj.displayName}의 Profile`\n            : \"Profile\"}\n          </span>\n        </Link>\n     </ul>\n  </nav>\n);\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) =>  {\n     return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ?\n                <div\n                style={{\n                  maxWidth: 890,\n                  width: \"100%\",\n                  margin: \"0 auto\",\n                  marginTop: 80,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n                >\n                <Route exact path=\"/\"><Home userObj={userObj} /></Route> \n                <Route exact path=\"/profile\"><Profile userObj={userObj} refreshUser={refreshUser}/></Route> \n                </div>\n                :\n                <Route exact path=\"/\"><Auth/></Route>}\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;","import React, {useEffect, useState} from 'react';\nimport AppRouter from './Router'\nimport { auth, authService } from '../fbase';\nimport { onAuthStateChanged } from 'firebase/auth';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(()=>{\n    // Adds an observer for changes to the user's sign-in state.\n    // wating firebase\n    onAuthStateChanged(auth, (user) => {\n      if(user) setUserObj(user);\n      setInit(true);\n    })\n  }, []);\n   \n  const refreshUser = () => {\n    setUserObj(authService.currentUser);\n  }\n\n  return (\n    <>\n    {init ?\n    <AppRouter \n    isLoggedIn={Boolean(userObj)} \n    userObj={userObj} \n    refreshUser={refreshUser}/> : <div class=\"authContainer\"> 로딩중.... </div> \n    }\n    </>\n  );\n}\n\nexport default App;\n// 모든 로직을 다룰 것임\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n    {/* App 컴포넌트가 모든 요소의 상위에 존재하기 때문에 여기서 유저 핸들링 하는게 좋다 */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}